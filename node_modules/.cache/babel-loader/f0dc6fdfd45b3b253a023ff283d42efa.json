{"ast":null,"code":"import _toConsumableArray from\"/Users/bong/sparta/react_week2/dictionary/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/bong/sparta/react_week2/dictionary/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/bong/sparta/react_week2/dictionary/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/bong/sparta/react_week2/dictionary/node_modules/@babel/runtime/regenerator/index.js\";import{db}from\"../../firebase\";import{collection,doc,getDoc,getDocs,addDoc,updateDoc,deleteDoc}from\"firebase/firestore\";//Action Type\nvar LOAD=\"dictionary/LOAD\";var CREATE=\"dictionary/CREATE\";var DELETE=\"dictionary/DELETE\";var UPDATE=\"dictionary/UPDATE\";var LOADED=\"dictionary/LOADED\";var initialState={is_loaded:false,list:[]};//Action Creator\nexport var loadDictionary=function loadDictionary(dictionary_list){return{type:LOAD,dictionary_list:dictionary_list};};export var createDictionary=function createDictionary(dictionary){return{type:CREATE,dictionary:dictionary};};export var deleteDictionary=function deleteDictionary(dictionary_index){return{type:DELETE,dictionary_index:dictionary_index};};export function updateDictionary(dictionary_id,word,explanation,example){return{type:UPDATE,dictionary_id:dictionary_id,word:word,explanation:explanation,example:example};}export function loadedDictionary(loaded){return{type:LOADED,loaded:loaded};}//middlewares\nexport var loadDictionaryFB=function loadDictionaryFB(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var dictionary_data,dictionary_list;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getDocs(collection(db,\"dictionary\"));case 2:dictionary_data=_context.sent;dictionary_list=[];dictionary_data.forEach(function(doc){dictionary_list.push(_objectSpread({id:doc.id},doc.data()));console.log(doc.data());});console.log(dictionary_list);dispatch(loadDictionary(dictionary_list));case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};//추가\nexport var addDictionaryFB=function addDictionaryFB(dictionary){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var docRef,dictionary_data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(loadedDictionary(false));_context2.next=3;return addDoc(collection(db,\"dictionary\"),dictionary);case 3:docRef=_context2.sent;dictionary_data=_objectSpread({id:docRef.id},dictionary);dispatch(createDictionary(dictionary_data));case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};//삭제\nexport var deleteDictionaryFB=function deleteDictionaryFB(dictionary_id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var docRef;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:docRef=doc(db,\"dictionary\",dictionary_id);_context3.next=3;return deleteDoc(docRef);case 3:dispatch(deleteDictionary(dictionary_id));case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};//업데이트\nexport var updateDictionaryFB=function updateDictionaryFB(dictionary_id,word,explanation,example){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,getState){var docRef;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(dictionary_id){_context4.next=3;break;}window.alert(\"아이디가 없습니다.\");return _context4.abrupt(\"return\");case 3:docRef=doc(db,\"dictionary\",dictionary_id);// 어떤 걸 수정 할 지 document를 집어온다.\n_context4.next=6;return updateDoc(docRef,{word:word,explanation:explanation,example:example});case 6:dispatch(updateDictionary(dictionary_id,word,explanation,example));case 7:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4,_x5){return _ref4.apply(this,arguments);};}();};// Reducer\nexport default function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};switch(action.type){// do reducer stuff\ncase\"dictionary/LOADED\":{return _objectSpread(_objectSpread({},state),{},{is_loaded:action.loaded});}case\"dictionary/LOAD\":return{list:action.dictionary_list,is_loaded:true};case\"dictionary/CREATE\":{var new_dictionary_list=[].concat(_toConsumableArray(state.list),[action.dictionary]);return{list:new_dictionary_list,is_loaded:true};}case\"dictionary/UPDATE\":{var _new_dictionary_list=state.list.map(function(item,i){if(item.id===action.dictionary_id){return _objectSpread(_objectSpread({},item),{},{word:action.word,explanation:action.explanation,example:action.example});}else{return item;}});return _objectSpread(_objectSpread({},state),{},{list:_new_dictionary_list});}case\"dictionary/DELETE\":{var _new_dictionary_list2=state.list.filter(function(item,i){return item.id!==action.dictionary_id;});return _objectSpread(_objectSpread({},state),{},{list:_new_dictionary_list2});}default:return state;}}","map":{"version":3,"sources":["/Users/bong/sparta/react_week2/dictionary/src/redux/modules/dictionary.js"],"names":["db","collection","doc","getDoc","getDocs","addDoc","updateDoc","deleteDoc","LOAD","CREATE","DELETE","UPDATE","LOADED","initialState","is_loaded","list","loadDictionary","dictionary_list","type","createDictionary","dictionary","deleteDictionary","dictionary_index","updateDictionary","dictionary_id","word","explanation","example","loadedDictionary","loaded","loadDictionaryFB","dispatch","dictionary_data","forEach","push","id","data","console","log","addDictionaryFB","docRef","deleteDictionaryFB","updateDictionaryFB","getState","window","alert","reducer","state","action","new_dictionary_list","map","item","i","filter"],"mappings":"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","sourcesContent":["import { db } from \"../../firebase\";\nimport {\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n} from \"firebase/firestore\";\n\n//Action Type\nconst LOAD = \"dictionary/LOAD\";\nconst CREATE = \"dictionary/CREATE\";\nconst DELETE = \"dictionary/DELETE\";\nconst UPDATE = \"dictionary/UPDATE\";\nconst LOADED = \"dictionary/LOADED\";\n\nconst initialState = {\n  is_loaded: false,\n  list: [],\n};\n\n//Action Creator\nexport const loadDictionary = (dictionary_list) => {\n  return { type: LOAD, dictionary_list };\n};\n\nexport const createDictionary = (dictionary) => {\n  return { type: CREATE, dictionary };\n};\n\nexport const deleteDictionary = (dictionary_index) => {\n  return { type: DELETE, dictionary_index };\n};\n\nexport function updateDictionary(dictionary_id, word, explanation, example) {\n  return {\n    type: UPDATE,\n    dictionary_id,\n    word,\n    explanation,\n    example,\n  };\n}\n\nexport function loadedDictionary(loaded) {\n  return {\n    type: LOADED,\n    loaded,\n  };\n}\n\n//middlewares\nexport const loadDictionaryFB = () => {\n  return async function (dispatch) {\n    const dictionary_data = await getDocs(collection(db, \"dictionary\"));\n\n    let dictionary_list = [];\n\n    dictionary_data.forEach((doc) => {\n      dictionary_list.push({ id: doc.id, ...doc.data() });\n      console.log(doc.data());\n    });\n    console.log(dictionary_list);\n    dispatch(loadDictionary(dictionary_list));\n  };\n};\n\n//추가\nexport const addDictionaryFB = (dictionary) => {\n  return async function (dispatch) {\n    dispatch(loadedDictionary(false));\n    const docRef = await addDoc(collection(db, \"dictionary\"), dictionary);\n    const dictionary_data = { id: docRef.id, ...dictionary };\n    dispatch(createDictionary(dictionary_data));\n  };\n};\n\n//삭제\nexport const deleteDictionaryFB = (dictionary_id) => {\n  return async function (dispatch) {\n    const docRef = doc(db, \"dictionary\", dictionary_id);\n    await deleteDoc(docRef);\n    dispatch(deleteDictionary(dictionary_id));\n  };\n};\n\n//업데이트\nexport const updateDictionaryFB = (\n  dictionary_id,\n  word,\n  explanation,\n  example\n) => {\n  return async function (dispatch, getState) {\n    if (!dictionary_id) {\n      window.alert(\"아이디가 없습니다.\");\n      return;\n    }\n\n    const docRef = doc(db, \"dictionary\", dictionary_id);\n    // 어떤 걸 수정 할 지 document를 집어온다.\n\n    await updateDoc(docRef, {\n      word: word,\n      explanation: explanation,\n      example: example,\n    });\n\n    dispatch(updateDictionary(dictionary_id, word, explanation, example));\n  };\n};\n\n// Reducer\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    // do reducer stuff\n    case \"dictionary/LOADED\": {\n      return { ...state, is_loaded: action.loaded };\n    }\n    case \"dictionary/LOAD\":\n      return { list: action.dictionary_list, is_loaded: true };\n    case \"dictionary/CREATE\": {\n      const new_dictionary_list = [...state.list, action.dictionary];\n      return { list: new_dictionary_list, is_loaded: true };\n    }\n    case \"dictionary/UPDATE\": {\n      const new_dictionary_list = state.list.map((item, i) => {\n        if (item.id === action.dictionary_id) {\n          return {\n            ...item,\n            word: action.word,\n            explanation: action.explanation,\n            example: action.example,\n          };\n        } else {\n          return item;\n        }\n      });\n      return { ...state, list: new_dictionary_list };\n    }\n    case \"dictionary/DELETE\": {\n      const new_dictionary_list = state.list.filter((item, i) => {\n        return item.id !== action.dictionary_id;\n      });\n      return { ...state, list: new_dictionary_list };\n    }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}