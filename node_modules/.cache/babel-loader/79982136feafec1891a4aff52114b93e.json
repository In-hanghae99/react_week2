{"ast":null,"code":"var _jsxFileName = \"/Users/bong/sparta/react_week2/dictionary/src/AddWord.js\",\n    _s = $RefreshSig$();\n\nimport { React, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { addDictionaryFB } from \"./redux/modules/dictionary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddWord = props => {\n  _s();\n\n  const word = useRef();\n  const explanation = useRef();\n  const example = useRef();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const addWord = () => {\n    dispatch(addDictionaryFB({\n      word: word.current.value,\n      explanation: explanation.current.value,\n      example: example.current.value\n    }));\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB2E8\\uC5B4 \\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uB2E8\\uC5B4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC124\\uBA85\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC608\\uC2DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          history.push(\"/\");\n        },\n        children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddWord, \"umaJ+96fTMa8ukJGAOmXPg9+u98=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = AddWord;\nexport default AddWord;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddWord\");","map":{"version":3,"sources":["/Users/bong/sparta/react_week2/dictionary/src/AddWord.js"],"names":["React","useRef","useDispatch","useHistory","addDictionaryFB","AddWord","props","word","explanation","example","dispatch","history","addWord","current","value","push"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,4BAAhC;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,IAAI,GAAGN,MAAM,EAAnB;AACA,QAAMO,WAAW,GAAGP,MAAM,EAA1B;AACA,QAAMQ,OAAO,GAAGR,MAAM,EAAtB;AAEA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,OAAO,GAAG,MAAM;AACpBF,IAAAA,QAAQ,CACNN,eAAe,CAAC;AACdG,MAAAA,IAAI,EAAEA,IAAI,CAACM,OAAL,CAAaC,KADL;AAEdN,MAAAA,WAAW,EAAEA,WAAW,CAACK,OAAZ,CAAoBC,KAFnB;AAGdL,MAAAA,OAAO,EAAEA,OAAO,CAACI,OAAR,CAAgBC;AAHX,KAAD,CADT,CAAR;AAOAH,IAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;AACD,GATD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAaE;AACE,QAAA,OAAO,EAAE,MAAM;AACbJ,UAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA7CD;;GAAMV,O;UAKaH,W,EAEDC,U;;;KAPZE,O;AA+CN,eAAeA,OAAf","sourcesContent":["import { React, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { addDictionaryFB } from \"./redux/modules/dictionary\";\n\nconst AddWord = (props) => {\n  const word = useRef();\n  const explanation = useRef();\n  const example = useRef();\n\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const addWord = () => {\n    dispatch(\n      addDictionaryFB({\n        word: word.current.value,\n        explanation: explanation.current.value,\n        example: example.current.value,\n      })\n    );\n    history.push(\"/\");\n  };\n  return (\n    <div>\n      <h2>단어 추가하기</h2>\n      <form>\n        <div>\n          <label>단어</label>\n          <input type=\"text\"></input>\n        </div>\n        <div>\n          <label>설명</label>\n          <input type=\"text\"></input>\n        </div>\n        <div>\n          <label>예시</label>\n          <input type=\"text\"></input>\n        </div>\n        <button\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          추가하기\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddWord;\n"]},"metadata":{},"sourceType":"module"}